name: 'Apply terraform plan'

on:
  issues:
    types: [opened, reopened]
  # push:
  # pull_request:
  #   types:
  #     - closed

jobs:
  # apply-terraform-plan:
  #   if: github.event.pull_request.merged == true
  apply-terraform-plan:
    name: 'apply-terraform-plan'
    runs-on: 'ubuntu-latest'
    # runs-on: [self-hosted, Linux]
    strategy:
      matrix:
        env:
          - dev
          - stage
    environment: ${{ matrix.env }}
    
    defaults:
      run:
        shell: bash        
        working-directory: "terraform/${{matrix.env}}"

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.0
        
    # Lee: we could get rid of this step
    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      id: apply
      shell: bash
      env:
        TF_VAR_github_token: ${{ secrets.TOKEN_GITHUB_TERRAFORM }}
        TF_LOG: INFO
      run: |
        terraform apply -auto-approve
